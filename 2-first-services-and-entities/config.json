{"engineConfig":{"defaultFlushInterval":"500","datasourceConfigurations":[{"kind":"GRAPHQL","rootNodes":[{"typeName":"Query","fieldNames":["product","products","ratings","user","users"]},{"typeName":"Mutation","fieldNames":["addProductReview","addProductToUserBasket"]},{"typeName":"Product","fieldNames":["sku","upc","name","reviews"]},{"typeName":"User","fieldNames":["basket","id","username"]}],"childNodes":[{"typeName":"Review","fieldNames":["author","content","rating"]}],"overrideFieldPathFromAlias":true,"customGraphql":{"fetch":{"url":{"staticVariableContent":"http://localhost:4111/graphql"},"method":"POST","body":{},"baseUrl":{},"path":{}},"subscription":{"enabled":true,"url":{"staticVariableContent":"http://localhost:4111/graphql"},"protocol":"GRAPHQL_SUBSCRIPTION_PROTOCOL_WS","websocketSubprotocol":"GRAPHQL_WEBSOCKET_SUBPROTOCOL_AUTO"},"federation":{"enabled":true,"serviceSdl":"input BasketInput {\n  product: ProductInput!\n  userId: Int!\n}\n\ntype Query {\n  product(input: ProductInput!): Product\n  products: [Product!]!\n  ratings: [Rating!]!\n  user(id: Int!): User\n  users: [User!]!\n}\n\ntype Mutation {\n  addProductReview(input: ProductReviewInput): Review\n  addProductToUserBasket(input: BasketInput): User\n}\n\ntype Product {\n  sku: ID!\n  upc: Int!\n  name: String!\n  reviews: [Review!]!\n}\n\ninput ProductInput {\n  sku: ID!\n  upc: Int!\n}\n\ninput ProductReviewInput {\n  product: ProductInput!\n  review: ReviewInput!\n}\n\ntype User {\n  basket: [Product!]!\n  id: Int!\n  username: String!\n}\n\nenum Rating {\n  POSITIVE\n  NEUTRAL\n  NEGATIVE\n}\n\ninput ReviewInput {\n  authorId: Int!\n  content: String!\n  rating: Rating!\n}\n\ntype Review {\n  author: User!\n  content: String!\n  rating: Rating!\n}"},"upstreamSchema":{"key":"cc6626b6fb106eeea383b56d9eeeffdad03f1b1a"}},"requestTimeoutSeconds":"10","id":"0","keys":[{"typeName":"Product","selectionSet":"sku upc","disableEntityResolver":true},{"typeName":"User","selectionSet":"id","disableEntityResolver":true}]},{"kind":"GRAPHQL","rootNodes":[{"typeName":"Product","fieldNames":["sku","upc"]}],"overrideFieldPathFromAlias":true,"customGraphql":{"fetch":{"url":{"staticVariableContent":"http://localhost:4112/graphql"},"method":"POST","body":{},"baseUrl":{},"path":{}},"subscription":{"enabled":true,"url":{"staticVariableContent":"http://localhost:4112/graphql"},"protocol":"GRAPHQL_SUBSCRIPTION_PROTOCOL_WS","websocketSubprotocol":"GRAPHQL_WEBSOCKET_SUBPROTOCOL_AUTO"},"federation":{"enabled":true,"serviceSdl":"# Add the @link directive and import the \"@key\" directive\nextend schema\n@link(url: \"https://specs.apollo.dev/federation/v2.5\", import: [\"@key\"])\n\n\"\"\"\nAdd the Product type as an entity.\nThe sku AND upc fields are necessary to uniquely identify a Product (compound key).\nNote that the resolvable argument is set to false.\nThis means no entity resolver is defined for Product in this subgraph (yet).\n\"\"\"\ntype Product @key(fields: \"sku upc\", resolvable: false) {\n  sku: ID!\n  upc: Int!\n}"},"upstreamSchema":{"key":"21ad7dca45e7f1da2a9b6167663c41b8e6a5395a"}},"requestTimeoutSeconds":"10","id":"1","keys":[{"typeName":"Product","selectionSet":"sku upc","disableEntityResolver":true}]},{"kind":"GRAPHQL","rootNodes":[{"typeName":"User","fieldNames":["id"]}],"overrideFieldPathFromAlias":true,"customGraphql":{"fetch":{"url":{"staticVariableContent":"http://localhost:4114/graphql"},"method":"POST","body":{},"baseUrl":{},"path":{}},"subscription":{"enabled":true,"url":{"staticVariableContent":"http://localhost:4114/graphql"},"protocol":"GRAPHQL_SUBSCRIPTION_PROTOCOL_WS","websocketSubprotocol":"GRAPHQL_WEBSOCKET_SUBPROTOCOL_AUTO"},"federation":{"enabled":true,"serviceSdl":"# Add the @link directive and import the \"@key\" directive\nextend schema\n@link(url: \"https://specs.apollo.dev/federation/v2.5\", import: [\"@key\"])\n\n\"\"\"\nAdd the User type as an entity.\nThe id field is necessary to uniquely identify a User.\nNote that the resolvable argument is set to false.\nThis means no entity resolver is defined for User in this subgraph (yet).\n\"\"\"\ntype User @key(fields: \"id\", resolvable: false) {\n  id: Int!\n}"},"upstreamSchema":{"key":"39383b94a7c9418f385e2d18d2e7c0d9098c3aa5"}},"requestTimeoutSeconds":"10","id":"2","keys":[{"typeName":"User","selectionSet":"id","disableEntityResolver":true}]}],"fieldConfigurations":[{"typeName":"Query","fieldName":"product","argumentsConfiguration":[{"name":"input","sourceType":"FIELD_ARGUMENT"}]},{"typeName":"Query","fieldName":"user","argumentsConfiguration":[{"name":"id","sourceType":"FIELD_ARGUMENT"}]},{"typeName":"Mutation","fieldName":"addProductReview","argumentsConfiguration":[{"name":"input","sourceType":"FIELD_ARGUMENT"}]},{"typeName":"Mutation","fieldName":"addProductToUserBasket","argumentsConfiguration":[{"name":"input","sourceType":"FIELD_ARGUMENT"}]}],"graphqlSchema":"schema {\n  query: Query\n  mutation: Mutation\n}\n\ndirective @authenticated on ENUM | FIELD_DEFINITION | INTERFACE | OBJECT | SCALAR\n\ndirective @inaccessible on ARGUMENT_DEFINITION | ENUM | ENUM_VALUE | FIELD_DEFINITION | INPUT_FIELD_DEFINITION | INPUT_OBJECT | INTERFACE | OBJECT | SCALAR | UNION\n\ndirective @requiresScopes(scopes: [[openfed__Scope!]!]!) on ENUM | FIELD_DEFINITION | INTERFACE | OBJECT | SCALAR\n\ndirective @tag(name: String!) repeatable on ARGUMENT_DEFINITION | ENUM | ENUM_VALUE | FIELD_DEFINITION | INPUT_FIELD_DEFINITION | INPUT_OBJECT | INTERFACE | OBJECT | SCALAR | UNION\n\nscalar openfed__Scope\n\ninput BasketInput {\n  product: ProductInput!\n  userId: Int!\n}\n\ntype Query {\n  product(input: ProductInput!): Product\n  products: [Product!]!\n  ratings: [Rating!]!\n  user(id: Int!): User\n  users: [User!]!\n}\n\ntype Mutation {\n  addProductReview(input: ProductReviewInput): Review\n  addProductToUserBasket(input: BasketInput): User\n}\n\n\"\"\"\nAdd the Product type as an entity.\nThe sku AND upc fields are necessary to uniquely identify a Product (compound key).\nNote that the resolvable argument is set to false.\nThis means no entity resolver is defined for Product in this subgraph (yet).\n\"\"\"\ntype Product {\n  sku: ID!\n  upc: Int!\n  name: String!\n  reviews: [Review!]!\n}\n\ninput ProductInput {\n  sku: ID!\n  upc: Int!\n}\n\ninput ProductReviewInput {\n  product: ProductInput!\n  review: ReviewInput!\n}\n\n\"\"\"\nAdd the User type as an entity.\nThe id field is necessary to uniquely identify a User.\nNote that the resolvable argument is set to false.\nThis means no entity resolver is defined for User in this subgraph (yet).\n\"\"\"\ntype User {\n  basket: [Product!]!\n  id: Int!\n  username: String!\n}\n\nenum Rating {\n  POSITIVE\n  NEUTRAL\n  NEGATIVE\n}\n\ninput ReviewInput {\n  authorId: Int!\n  content: String!\n  rating: Rating!\n}\n\ntype Review {\n  author: User!\n  content: String!\n  rating: Rating!\n}","stringStorage":{"cc6626b6fb106eeea383b56d9eeeffdad03f1b1a":"schema {\n  query: Query\n  mutation: Mutation\n}\n\ndirective @extends on INTERFACE | OBJECT\n\ndirective @external on FIELD_DEFINITION | OBJECT\n\ndirective @key(fields: openfed__FieldSet!, resolvable: Boolean = true) repeatable on INTERFACE | OBJECT\n\ndirective @provides(fields: openfed__FieldSet!) on FIELD_DEFINITION\n\ndirective @requires(fields: openfed__FieldSet!) on FIELD_DEFINITION\n\ndirective @tag(name: String!) repeatable on ARGUMENT_DEFINITION | ENUM | ENUM_VALUE | FIELD_DEFINITION | INPUT_FIELD_DEFINITION | INPUT_OBJECT | INTERFACE | OBJECT | SCALAR | UNION\n\ninput BasketInput {\n  product: ProductInput!\n  userId: Int!\n}\n\ntype Mutation {\n  addProductReview(input: ProductReviewInput): Review\n  addProductToUserBasket(input: BasketInput): User\n}\n\ntype Product {\n  name: String!\n  reviews: [Review!]!\n  sku: ID!\n  upc: Int!\n}\n\ninput ProductInput {\n  sku: ID!\n  upc: Int!\n}\n\ninput ProductReviewInput {\n  product: ProductInput!\n  review: ReviewInput!\n}\n\ntype Query {\n  product(input: ProductInput!): Product\n  products: [Product!]!\n  ratings: [Rating!]!\n  user(id: Int!): User\n  users: [User!]!\n}\n\nenum Rating {\n  NEGATIVE\n  NEUTRAL\n  POSITIVE\n}\n\ntype Review {\n  author: User!\n  content: String!\n  rating: Rating!\n}\n\ninput ReviewInput {\n  authorId: Int!\n  content: String!\n  rating: Rating!\n}\n\ntype User {\n  basket: [Product!]!\n  id: Int!\n  username: String!\n}\n\nscalar openfed__FieldSet","21ad7dca45e7f1da2a9b6167663c41b8e6a5395a":"directive @authenticated on ENUM | FIELD_DEFINITION | INTERFACE | OBJECT | SCALAR\n\ndirective @composeDirective(name: String!) repeatable on SCHEMA\n\ndirective @extends on INTERFACE | OBJECT\n\ndirective @external on FIELD_DEFINITION | OBJECT\n\ndirective @inaccessible on ARGUMENT_DEFINITION | ENUM | ENUM_VALUE | FIELD_DEFINITION | INPUT_FIELD_DEFINITION | INPUT_OBJECT | INTERFACE | OBJECT | SCALAR | UNION\n\ndirective @interfaceObject on OBJECT\n\ndirective @key(fields: openfed__FieldSet!, resolvable: Boolean = true) repeatable on INTERFACE | OBJECT\n\ndirective @link(as: String, for: String, import: [String], url: String!) repeatable on SCHEMA\n\ndirective @override(from: String!) on FIELD_DEFINITION\n\ndirective @provides(fields: openfed__FieldSet!) on FIELD_DEFINITION\n\ndirective @requires(fields: openfed__FieldSet!) on FIELD_DEFINITION\n\ndirective @requiresScopes(scopes: [[openfed__Scope!]!]!) on ENUM | FIELD_DEFINITION | INTERFACE | OBJECT | SCALAR\n\ndirective @shareable on FIELD_DEFINITION | OBJECT\n\ndirective @tag(name: String!) repeatable on ARGUMENT_DEFINITION | ENUM | ENUM_VALUE | FIELD_DEFINITION | INPUT_FIELD_DEFINITION | INPUT_OBJECT | INTERFACE | OBJECT | SCALAR | UNION\n\n\"\"\"\nAdd the Product type as an entity.\nThe sku AND upc fields are necessary to uniquely identify a Product (compound key).\nNote that the resolvable argument is set to false.\nThis means no entity resolver is defined for Product in this subgraph (yet).\n\"\"\"\ntype Product @key(fields: \"sku upc\", resolvable: false) {\n  sku: ID!\n  upc: Int!\n}\n\nscalar openfed__FieldSet\n\nscalar openfed__Scope","39383b94a7c9418f385e2d18d2e7c0d9098c3aa5":"directive @authenticated on ENUM | FIELD_DEFINITION | INTERFACE | OBJECT | SCALAR\n\ndirective @composeDirective(name: String!) repeatable on SCHEMA\n\ndirective @extends on INTERFACE | OBJECT\n\ndirective @external on FIELD_DEFINITION | OBJECT\n\ndirective @inaccessible on ARGUMENT_DEFINITION | ENUM | ENUM_VALUE | FIELD_DEFINITION | INPUT_FIELD_DEFINITION | INPUT_OBJECT | INTERFACE | OBJECT | SCALAR | UNION\n\ndirective @interfaceObject on OBJECT\n\ndirective @key(fields: openfed__FieldSet!, resolvable: Boolean = true) repeatable on INTERFACE | OBJECT\n\ndirective @link(as: String, for: String, import: [String], url: String!) repeatable on SCHEMA\n\ndirective @override(from: String!) on FIELD_DEFINITION\n\ndirective @provides(fields: openfed__FieldSet!) on FIELD_DEFINITION\n\ndirective @requires(fields: openfed__FieldSet!) on FIELD_DEFINITION\n\ndirective @requiresScopes(scopes: [[openfed__Scope!]!]!) on ENUM | FIELD_DEFINITION | INTERFACE | OBJECT | SCALAR\n\ndirective @shareable on FIELD_DEFINITION | OBJECT\n\ndirective @tag(name: String!) repeatable on ARGUMENT_DEFINITION | ENUM | ENUM_VALUE | FIELD_DEFINITION | INPUT_FIELD_DEFINITION | INPUT_OBJECT | INTERFACE | OBJECT | SCALAR | UNION\n\n\"\"\"\nAdd the User type as an entity.\nThe id field is necessary to uniquely identify a User.\nNote that the resolvable argument is set to false.\nThis means no entity resolver is defined for User in this subgraph (yet).\n\"\"\"\ntype User @key(fields: \"id\", resolvable: false) {\n  id: Int!\n}\n\nscalar openfed__FieldSet\n\nscalar openfed__Scope"}},"version":"1ea9cc57-6b85-4f7b-bab5-8edff54b9f4c","subgraphs":[{"id":"0","name":"monolith","routingUrl":"http://localhost:4111/graphql"},{"id":"1","name":"products","routingUrl":"http://localhost:4112/graphql"},{"id":"2","name":"users","routingUrl":"http://localhost:4114/graphql"}]}